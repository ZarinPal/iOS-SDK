// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4 (swiftlang-1205.0.26.9 clang-1205.0.19.55)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -module-name ZarinPal
import CommonCrypto
import CommonCrypto/*.CC_LONG*/
import CommonCrypto/*.CC_MD5*/
import CommonCrypto/*.CC_MD5_DIGEST_LENGTH*/
import Foundation
import Starscream
import Swift
import UIKit
@_exported import ZarinPal
public class ZarinPal {
  public init()
  public func start(request: ZarinPal.Request, callback: ZarinPal.PaymentCallback, vc: UIKit.UIViewController)
  @objc deinit
}
extension Bundle {
  public var icon: UIKit.UIImage? {
    get
  }
}
public struct ReceiptShaparak : Swift.Codable {
  public var status: Swift.String
  public var amount: Swift.Int64
  public var description: Swift.String
  public var date: Swift.String
  public var message: Swift.String
  public var provider: Swift.String?
  public var redirect_url: Swift.String?
  public var ref_id: Swift.Int64
  public var receipt: ZarinPal.Receipt
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public struct Receipt : Swift.Codable {
  public var user: ZarinPal.User
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public struct User : Swift.Codable {
  public var name: Swift.String?
  public var avatar: Swift.String?
  public var title: Swift.String?
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
public protocol PaymentCallback {
  func didReceive(receipt: ZarinPal.ReceiptShaparak, raw: Swift.String)
  func didException(exception: Foundation.NSException)
  func didClose()
}
public struct Request : Swift.Codable {
  public static func asPaymentRequest(merchantID: Swift.String, amount: Swift.Int64, callbackURL: Swift.String, description: Swift.String, mobile: Swift.String, email: Swift.String) -> ZarinPal.Request
  public static func asPaymentRequest(merchantID: Swift.String, amount: Swift.Int64, callbackURL: Swift.String, description: Swift.String) -> ZarinPal.Request
  public static func asAuthority(authority: Swift.String) -> ZarinPal.Request
  public func encode(to encoder: Swift.Encoder) throws
  public init(from decoder: Swift.Decoder) throws
}
